marked.setOptions({
  breaks: true
});

var defaultText = "# header1\n## header2\n### header3\n#### header4\n##### header5\n###### header6\n\n---\n*italic* or _italic_\n\n**bold** or __bold__\n\n~~strikethrough~~\n\n---\nBlockquote nest with > next to eachother or with a space in between\n>nested quote\n>>more nested quote\n> > >super nested quote\n\n---\nUse -, +, or * at the start for unordered lists\n* star\n- minus\n+ plus\n   + create sublist by indenting twice first\n        - you can indent as much as needed for new lists\n\n---\n1. Use number . to make a numbered list.\n1. you can use 1. as well as many times as you want.\n* Or use *\n- dashes are OK too\n\n---\nA [link to freecodecamp.org](https://www.freecodecamp.org)\n\n`<p>This is a line of code</p>`\n\n\`\`\`\n<div>\n <h1>This is a block of code</h1>\n</div>\n\`\`\`\n\n---\nThis is an image ![image](https://www.w3schools.com/images/w3schools_green.jpg)"

const giveLink = new marked.Renderer();
giveLink.link = (href, title, text) => {
  return `<a target="_blank" href="${href}">${text}</a>`;
}

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state={
      input: defaultText
    };
    this.handleChange = this.handleChange.bind(this);
    this.clearInput = this.clearInput.bind(this);
    this.resetDefault = this.resetDefault.bind(this);
  }
  
  handleChange(event) {
    this.setState({
      input: event.target.value
    });
  }
  
  clearInput() {
    this.setState({
      input: ""
    });
  }
  
  resetDefault() {
    this.setState({
      input: defaultText
    })
  }
  
  render() {
    return(
      <div id="wrapper">
        <h1 id='title'>Markdown Previewer</h1>
        <div id="container">
          <div>
            <h2 className="heading">Editor 
              <button onClick={this.clearInput}>Clear</button> 
              <button onClick={this.resetDefault}>Reset to Default</button>
            </h2>
          <textarea id="editor" cols="70" rows="50" value= {this.state.input} onChange={this.handleChange}></textarea>
          </div>
          <div>
            <h2 className="heading">Preview Window</h2>
          <div id="preview" dangerouslySetInnerHTML={{__html: marked(this.state.input, {renderer: giveLink})}}></div>
          </div>
        </div>
      </div>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('app'));